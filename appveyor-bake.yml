# The config is used to bake appveyor images, not for running CI jobs.
# The config expects the following environment variables to be set:
#  - "APPVEYOR_BAKE_IMAGE" e.g. 'electron-99.0.4767.0'. Name of the image to be baked.
#      Typically named after the Chromium version on which the image is built.
#      This can be set dynamically in the prepare-appveyor script.

version: 1.0.{build}
build_cloud: electronhq-16-core
image: Windows_Default_Appveyor
environment:
  GIT_CACHE_PATH: C:\Users\appveyor\libcc_cache
  ELECTRON_OUT_DIR: Default
  ELECTRON_ENABLE_STACK_DUMPING: 1
  MOCHA_REPORTER: mocha-multi-reporters
  MOCHA_MULTI_REPORTERS: mocha-appveyor-reporter, tap
  GOMA_FALLBACK_ON_AUTH_FAILURE: true
  DEPOT_TOOLS_WIN_TOOLCHAIN: 0
  PYTHONIOENCODING: UTF-8
build_script:
  - git config --global core.longpaths true
  - cd ..
  - mkdir src
  - ps: git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git  
  - ps: $env:PATH="$pwd\depot_tools;$env:PATH"  
  - update_depot_tools.bat
  - ps: Move-Item $env:APPVEYOR_BUILD_FOLDER -Destination src\electron
  - src\electron\script\setup-win-for-dev.bat
  - ps: >-
      if (Test-Path 'env:RAW_GOMA_AUTH') {
        $env:GOMA_OAUTH2_CONFIG_FILE = "$pwd\.goma_oauth2_config"
        $env:RAW_GOMA_AUTH | Set-Content $env:GOMA_OAUTH2_CONFIG_FILE
      }
  - ps: >-
      $env:NINJA_STATUS="[%r processes, %f/%t @ %o/s : %es] "
  - >-
      gclient config
      --name "src\electron"
      --unmanaged
      %GCLIENT_EXTRA_ARGS%
      "https://github.com/electron/electron"
  - ps: cd src\electron
  - ps: node script\generate-deps-hash.js
  - ps: $depshash = Get-Content .\.depshash -Raw
  - ps: $zipfile = "Z:\$depshash.7z"
  - ps: Copy-Item -path .\.depshash -destination ..\.depshash
  - ps: cd ..\..
  - ps: >-
      if ($env:TARGET_ARCH -ne 'ia32') {
        # only save on x64/woa to avoid contention saving
        $env:SAVE_GCLIENT_SRC="true"
      }
  - gclient sync --with_branch_heads --with_tags --nohooks
  - ps: regsvr32 /s "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\DIA SDK\bin\amd64\msdia140.dll"
on_image_bake:
  - ps: >-
      echo "Baking image: $env:APPVEYOR_BAKE_IMAGE at dir $PWD"
  - ps: Remove-Item -Recurse -Force $pwd\depot_tools
  - ps: Remove-Item -Recurse -Force $pwd\src\electron
# Uncomment these lines to enable RDP
#on_finish:
#  - ps: >-
#      if ($env:TARGET_ARCH -eq 'x64') {
#        echo "SETTING BAKE IMAGE"
#        $env:APPVEYOR_RDP_PASSWORD = "electron"
#        $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
#      }